name: Security Scan

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run security scans daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  dependency-scan:
    name: Dependency Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=medium --file=package.json

      - name: Run npm audit
        run: npm audit --audit-level=moderate || true

      - name: Run audit-ci
        run: npx audit-ci --moderate || true

  container-scan:
    name: Container Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t councilworks:security-scan .

      - name: Run Snyk Container Scan
        uses: snyk/actions/docker@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: councilworks:security-scan
          args: --severity-threshold=medium

  infrastructure-scan:
    name: Infrastructure as Code Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Snyk IaC Scan
        uses: snyk/actions/iac@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=medium --path=infra/

  security-report:
    name: Generate Security Report
    runs-on: ubuntu-latest
    needs: [dependency-scan, container-scan, infrastructure-scan]
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate comprehensive security report
        run: |
          echo "# Security Scan Report - $(date)" > security-report.md
          echo "" >> security-report.md
          echo "## Dependency Scan Results" >> security-report.md
          echo "- Status: ${{ needs.dependency-scan.result }}" >> security-report.md
          echo "" >> security-report.md
          echo "## Container Scan Results" >> security-report.md
          echo "- Status: ${{ needs.container-scan.result }}" >> security-report.md
          echo "" >> security-report.md
          echo "## Infrastructure Scan Results" >> security-report.md
          echo "- Status: ${{ needs.infrastructure-scan.result }}" >> security-report.md
          echo "" >> security-report.md
          echo "## Next Steps" >> security-report.md
          echo "- Review any high/critical vulnerabilities" >> security-report.md
          echo "- Update dependencies with security patches" >> security-report.md
          echo "- Monitor Snyk dashboard for ongoing alerts" >> security-report.md

      - name: Upload security report
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: security-report.md
